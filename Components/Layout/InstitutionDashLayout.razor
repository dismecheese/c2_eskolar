
@inherits LayoutComponentBase
@implements IDisposable

@inject NavigationManager Navigation
@inject IJSRuntime JSRuntime
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject UserManager<IdentityUser> UserManager
@inject InstitutionProfileService InstitutionProfileService

@using Microsoft.AspNetCore.Components.Web
@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Identity
@using c2_eskolar.Components.UI
@using System.ComponentModel.DataAnnotations

@rendermode InteractiveServer

@code {
    // --- SIDEBAR/PROFILE STATE ---
    private string? adminFirstName;
    private string? adminLastName;
    private DateTime currentMonth = new(DateTime.Now.Year, DateTime.Now.Month, 1);

    // --- VERIFICATION MODAL STATE ---
    private bool showVerificationModal = false;
    private bool? isVerified = null;
    private string? verificationStatus = null;
    private string? userId;

    protected override async Task OnInitializedAsync()
    {
        await LoadInstitutionProfile();
        await CheckVerificationStatus();
    }

    private async Task CheckVerificationStatus()
    {
        try
        {
            var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
            userId = authState.User.FindFirst(System.Security.Claims.ClaimTypes.NameIdentifier)?.Value;
            if (!string.IsNullOrEmpty(userId))
            {
                var profile = await InstitutionProfileService.GetProfileByUserIdAsync(userId);
                isVerified = profile?.IsVerified;
                verificationStatus = profile?.VerificationStatus;
                // Show modal if not verified (null or false) or status is not "Verified"
                if (isVerified != true && (string.IsNullOrEmpty(verificationStatus) || verificationStatus != "Verified"))
                {
                    showVerificationModal = true;
                }
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error checking verification status: {ex.Message}");
        }
    }

    private async Task LoadInstitutionProfile()
    {
        try
        {
            var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
            var userId = authState.User.FindFirst(System.Security.Claims.ClaimTypes.NameIdentifier)?.Value;
            if (!string.IsNullOrEmpty(userId))
            {
                var profile = await InstitutionProfileService.GetProfileByUserIdAsync(userId);
                adminFirstName = profile?.AdminFirstName;
                adminLastName = profile?.AdminLastName;
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error loading institution profile: {ex.Message}");
        }
        StateHasChanged();
    }

    private string GetSidebarLinkClass(string href)
    {
        var currentPath = Navigation.ToBaseRelativePath(Navigation.Uri).Split('?')[0].TrimEnd('/');
        var linkPath = href.TrimStart('/').TrimEnd('/');
        if (currentPath == linkPath)
            return "nav-link d-flex align-items-center gap-2 sidebar-link active";
        return "nav-link d-flex align-items-center gap-2 sidebar-link";
    }

    private void NavigateToInstitutionProfile()
    {
        Navigation.NavigateTo("/dashboard/institution/profile");
    }

    // --- CHATBOT STATE ---
    private bool ShowChatbot = false;
    private void OpenChatbot() => ShowChatbot = true;
    private void CloseChatbot() => ShowChatbot = false;
    private void MinimizeChatbot() => ShowChatbot = false;
    
    // --- LOGOUT FUNCTIONALITY ---
    private void LogOut()
    {
        try
        {
            Navigation.NavigateTo("/api/auth/logout", forceLoad: true);
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Logout error: {ex.Message}");
        }
    }

    private async Task ShowLogoutModal()
    {
        try
        {
            await JSRuntime.InvokeVoidAsync("eval", @"
                if (typeof bootstrap !== 'undefined' && bootstrap.Modal) {
                    const modal = new bootstrap.Modal(document.getElementById('logoutModal'));
                    modal.show();
                } else {
                    console.error('Bootstrap not loaded');
                }
            ");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Modal error: {ex.Message}");
            // Fallback to direct logout if modal fails
            LogOut();
        }
    }
    
    // --- VERIFICATION MODAL ACTIONS ---
    private void GoToVerification()
    {
        showVerificationModal = false;
        Navigation.NavigateTo("/institution/verification");
    }

    private void SkipVerification()
    {
        showVerificationModal = false;
    }
    
    public void Dispose() { }
}

<!-- --- MAIN LAYOUT STRUCTURE --- -->

<div class="d-flex min-vh-100">
    <!-- --- SIDEBAR --- -->
    <nav class="sidebar d-flex flex-column justify-content-between"
         style="width: 260px; background: linear-gradient(180deg, #1560d4 0%, #0d387e 100%); padding: 2rem 1.5rem 1rem 1.5rem;">
        
        <div>
            <!-- Logo Section -->
            <div class="sidebar-brand-container text-center">
                <a class="eskolar-logo" href="/dashboard/institution">
                    <img src="images/main/eSkolar-White.svg" alt="eSkolar Logo" class="eskolar-logo-img" />
                </a>
            </div>

            <!-- Navigation Links -->
            <ul class="nav flex-column gap-1">
                <li class="nav-item">
                    <a href="/dashboard/institution" class="@GetSidebarLinkClass("/dashboard/institution")">
                        <i class="fa fa-home"></i> Dashboard
                    </a>
                </li>
                <li class="nav-item">
                    <a href="/dashboard/institution/scholarships" class="@GetSidebarLinkClass("/dashboard/institution/scholarships")">
                        <i class="fa fa-graduation-cap"></i> Scholarships
                    </a>
                </li>
                <li class="nav-item">
                    <a href="/dashboard/institution/announcements" class="@GetSidebarLinkClass("/dashboard/institution/announcements")">
                        <i class="fa fa-bullhorn"></i> Announcements
                    </a>
                </li>
                <li class="nav-item">
                    <a href="/dashboard/institution/partners" class="@GetSidebarLinkClass("/dashboard/institution/partners")">
                        <i class="fa fa-handshake"></i> Partners
                    </a>
                </li>
                <li class="nav-item">
                    <a href="/dashboard/institution/bookmarks" class="@GetSidebarLinkClass("/dashboard/institution/bookmarks")">
                        <i class="fa fa-star"></i> Bookmarks
                    </a>
                </li>
                <li class="nav-item">
                    <a href="/dashboard/institution/about" class="@GetSidebarLinkClass("/dashboard/institution/about")">
                        <i class="fa fa-info-circle"></i> About
                    </a>
                </li>
                <li class="nav-item">
                    <a href="/dashboard/institution/settings" class="@GetSidebarLinkClass("/dashboard/institution/settings")">
                        <i class="fa fa-cog"></i> Settings
                    </a>
                </li>
                <li class="nav-item">
                    <a href="/dashboard/institution/faqs" class="@GetSidebarLinkClass("/dashboard/institution/faqs")">
                        <i class="fa fa-question-circle"></i> FAQs
                    </a>
                </li>
            </ul>
            
            <!-- Logout Button in Main Navigation -->
            <div class="sidebar-logout-section mt-4 pt-3" style="border-top: 1px solid rgba(255,255,255,0.2);">
                <button class="sidebar-link logout-link w-100 border-0 text-start" 
                        @onclick="() => ShowLogoutModal()"
                        style="background: transparent; color: rgba(255,255,255,0.8); padding: 12px 16px; border-radius: 8px; transition: all 0.3s ease;">
                    <i class="fa fa-sign-out-alt"></i> Logout
                </button>
            </div>
        </div>

        <!-- Help Box Button (opens chatbot) -->
        <button class="help-box-bottom" @onclick="OpenChatbot" type="button">
            <div class="help-box-content">
                <img src="images/NeedHelp.svg" alt="Help" class="help-box-img" />
                <div class="help-box-text">
                    <div class="help-box-title">Need help?</div>
                    <div class="help-box-desc">Having trouble using eSkolar?<br />We're here to assist you!</div>
                </div>
            </div>
        </button>

    </nav>

    <!-- --- PROFILE SIDEBAR (Bootstrap Offcanvas) --- -->
    <button class="dashboard-profile-absolute mt-5" type="button" data-bs-toggle="offcanvas" data-bs-target="#rightSidebar" aria-controls="rightSidebar">
        <svg width="32" height="32" fill="none" viewBox="0 0 24 24">
            <circle cx="12" cy="8" r="4" stroke="#222" stroke-width="2"/>
            <circle cx="12" cy="12" r="11" stroke="#222" stroke-width="2"/>
            <path d="M4 20c1.5-3 5.5-5 8-5s6.5 2 8 5" stroke="#222" stroke-width="2"/>
        </svg>
    </button>

<!-- Profile Sidebar Content -->
<div class="offcanvas offcanvas-end" tabindex="-1" id="rightSidebar" aria-labelledby="rightSidebarLabel" data-bs-backdrop="false">
    <div class="offcanvas-header">
        <h5 class="offcanvas-title" id="rightSidebarLabel">Profile</h5>
        <button type="button" class="btn-close" data-bs-dismiss="offcanvas" aria-label="Close"></button>
  </div>

    <div class="offcanvas-body">
    <!-- Sidebar Profile Section -->
    <div class="sidebar-profile">
        <svg width="32" height="32" fill="none" viewBox="0 0 24 24">
            <circle cx="12" cy="8" r="4" stroke="#222" stroke-width="2"/>
            <circle cx="12" cy="12" r="11" stroke="#222" stroke-width="2"/>
            <path d="M4 20c1.5-3 5.5-5 8-5s6.5 2 8 5" stroke="#222" stroke-width="2"/>
        </svg>
    <div class="sidebar-profile-name">@((adminFirstName ?? "Institution") + (string.IsNullOrWhiteSpace(adminLastName) ? "" : $" {adminLastName}"))</div>
    <div class="sidebar-profile-role">Institution Admin</div>
    <button class="sidebar-profile-btn" @onclick="NavigateToInstitutionProfile" data-bs-dismiss="offcanvas">Profile</button>
    </div>
    
    <!-- Sidebar Calendar -->
    <div class="sidebar-calendar">
        <DashboardCalendar CurrentMonth="@currentMonth" CurrentMonthChanged="@(m => currentMonth = m)" />
    </div>

    <!-- Sidebar Notifications -->
    <div class="sidebar-notifications">
        <div class="sidebar-notifications-header">
            Notifications <span style="float:right;cursor:pointer;">Clear</span>
        </div>
        <div class="sidebar-notification-list">
            @for (int i = 0; i < 3; i++)
            {
                <div class="sidebar-notification">
                    <div class="sidebar-notification-title">Notif Title</div>
                    <div class="sidebar-notification-desc">Short Description Short Description Short Description</div>
                </div>
            }
        </div>
    </div>
</div>
</div>

    <!-- --- MAIN CONTENT AREA --- -->
    <main class="main-content" style="flex:1; min-width:0; background: #f5f6fa;">
        @Body

    </main>

    @if (ShowChatbot)
    {
        <ChatBot CloseChatbot="CloseChatbot" MinimizeChatbot="MinimizeChatbot" />
    }

    @if (showVerificationModal)
    {
        <div class="sv-modal sv-modal-backdrop">
            <div class="sv-modal-content">
                <div class="sv-modal-header">
                    <h2>Institution Verification Required</h2>
                    <p>Your institution needs to be verified to access all features. Please complete the verification process.</p>
                </div>
                <div class="sv-modal-body">
                    <p>To continue using eSkolar as an institution, you must verify your institution profile and upload required documents.</p>
                    <p>Click "Verify Institution" to complete your verification with institution details, admin information, and required documents.</p>
                </div>
                <div class="sv-modal-footer" style="display:flex;gap:16px;justify-content:flex-end;">
                    <button class="sv-btn sv-btn-secondary" @onclick="SkipVerification">Skip for Now</button>
                    <button class="sv-btn sv-btn-primary" @onclick="GoToVerification">Verify Institution</button>
                </div>
            </div>
        </div>
    }

</div>

<!-- Logout Confirmation Modal -->
<div class="modal fade" id="logoutModal" tabindex="-1" aria-labelledby="logoutModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header border-0">
                <h5 class="modal-title text-danger" id="logoutModalLabel">
                    <i class="fas fa-sign-out-alt me-2"></i>
                    Confirm Logout
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body text-center py-4">
                <i class="fas fa-exclamation-triangle text-warning mb-3" style="font-size: 3rem;"></i>
                <h6>Are you sure you want to logout?</h6>
                <p class="text-muted mb-0">You will be redirected to the login page.</p>
            </div>
            <div class="modal-footer border-0 justify-content-center">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                    <i class="fas fa-times me-2"></i>Cancel
                </button>
                <button type="button" class="btn btn-danger" @onclick="LogOut" data-bs-dismiss="modal">
                    <i class="fas fa-sign-out-alt me-2"></i>Yes, Logout
                </button>
            </div>
        </div>
    </div>
</div>

<!-- JavaScript helper to close Bootstrap offcanvas programmatically -->
<script>
document.addEventListener('click', function(event) {
    const offcanvas = document.getElementById('rightSidebar');
    if (offcanvas && offcanvas.classList.contains('show')) {
        // Ignore clicks inside the offcanvas or on the toggle button
        if (!offcanvas.contains(event.target) && !event.target.matches('[data-bs-toggle="offcanvas"]')) {
            const bsOffcanvas = bootstrap.Offcanvas.getInstance(offcanvas);
            if (bsOffcanvas) {
                bsOffcanvas.hide();
            }
        }
    }
});
</script>

<style>
.logout-link:hover {
    background: rgba(255,255,255,0.1) !important;
    color: rgba(255,255,255,1) !important;
    transform: translateX(4px);
}

.logout-link:active {
    background: rgba(255,255,255,0.15) !important;
}
</style>