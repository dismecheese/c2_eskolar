@inherits LayoutComponentBase
@implements IDisposable

@inject NavigationManager Navigation
@inject IJSRuntime JSRuntime
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject UserManager<IdentityUser> UserManager
@inject StudentProfileService StudentProfileService

@using Microsoft.AspNetCore.Components.Web
@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Identity
@using c2_eskolar.Components.UI

@rendermode @(RenderMode.InteractiveServer)

@code {
    // --- SIDEBAR/PROFILE STATE ---
    private string? studentFirstName;
    private string? studentLastName;
    private DateTime currentMonth = new(DateTime.Now.Year, DateTime.Now.Month, 1);

    protected override async Task OnInitializedAsync()
    {
        await LoadStudentProfile();
    }

    private async Task LoadStudentProfile()
    {
        try
        {
            var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
            var userId = authState.User.FindFirst(System.Security.Claims.ClaimTypes.NameIdentifier)?.Value;
            if (!string.IsNullOrEmpty(userId))
            {
                var profile = await StudentProfileService.GetProfileByUserIdAsync(userId);
                studentFirstName = profile?.FirstName;
                studentLastName = profile?.LastName;
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error loading student profile: {ex.Message}");
        }
        StateHasChanged();
    }

    private string GetSidebarLinkClass(string href)
    {
        var currentPath = Navigation.ToBaseRelativePath(Navigation.Uri).Split('?')[0].TrimEnd('/');
        var linkPath = href.TrimStart('/').TrimEnd('/');
        if (currentPath == linkPath)
            return "nav-link d-flex align-items-center gap-2 sidebar-link active";
        return "nav-link d-flex align-items-center gap-2 sidebar-link";
    }

    private void NavigateToStudentProfile()
    {
        Navigation.NavigateTo("/dashboard/student/profile/");
    }

    // --- CHATBOT STATE ---
    private bool ShowChatbot = false;
    private void OpenChatbot() => ShowChatbot = true;
    private void CloseChatbot() => ShowChatbot = false;
    public void Dispose() { }
}

<!-- --- MAIN LAYOUT STRUCTURE --- -->

<div class="d-flex min-vh-100">
    <!-- --- SIDEBAR --- -->
    <nav class="sidebar d-flex flex-column justify-content-between"
         style="width: 260px; background: linear-gradient(180deg, #1560d4 0%, #0d387e 100%); padding: 2rem 1.5rem 1rem 1.5rem;">
        
        <div>
            <!-- Logo Section -->
            <div class="sidebar-brand-container text-center">
                <a class="eskolar-logo" href="/">
                    <img src="images/main/eSkolar-White.svg" alt="eSkolar Logo" class="eskolar-logo-img" />
                </a>
            </div>
            
            <!-- Navigation Links -->
            <ul class="nav flex-column gap-1">
                <li class="nav-item">
                    <a href="/dashboard/student" class="@GetSidebarLinkClass("/dashboard/student")">
                        <i class="fa fa-home"></i> Dashboard
                    </a>
                </li>
                <li class="nav-item">
                    <a href="/dashboard/student/scholarships" class="@GetSidebarLinkClass("/dashboard/student/scholarships")">
                        <i class="fa fa-graduation-cap"></i> Scholarships
                    </a>
                </li>
                <li class="nav-item">
                    <a href="/dashboard/student/announcements" class="@GetSidebarLinkClass("/dashboard/student/announcements")">
                        <i class="fa fa-bullhorn"></i> Announcements
                    </a>
                </li>
                <li class="nav-item">
                    <a href="/dashboard/student/partners" class="@GetSidebarLinkClass("/dashboard/student/partners")">
                        <i class="fa fa-handshake"></i> Partners
                    </a>
                </li>
                <li class="nav-item">
                    <a href="/dashboard/student/bookmarks" class="@GetSidebarLinkClass("/dashboard/student/bookmarks")">
                        <i class="fa fa-star"></i> Bookmarks
                    </a>
                </li>
                <li class="nav-item">
                    <a href="/dashboard/student/about" class="@GetSidebarLinkClass("/dashboard/student/about")">
                        <i class="fa fa-info-circle"></i> About
                    </a>
                </li>
                <li class="nav-item">
                    <a href="/dashboard/student/settings" class="@GetSidebarLinkClass("/dashboard/student/settings")">
                        <i class="fa fa-cog"></i> Settings
                    </a>
                </li>
                <li class="nav-item">
                    <a href="/dashboard/student/faqs" class="@GetSidebarLinkClass("/dashboard/student/faqs")">
                        <i class="fa fa-question-circle"></i> FAQs
                    </a>
                </li>
            </ul>
        </div>

        <!-- Help Box Button (opens chatbot) -->
        <button class="help-box-bottom" @onclick="OpenChatbot" type="button">
            <div class="help-box-content">
                <img src="images/NeedHelp.svg" alt="Help" class="help-box-img" />
                <div class="help-box-text">
                    <div class="help-box-title">Need help?</div>
                    <div class="help-box-desc">Having trouble using eSkolar?<br />We're here to assist you!</div>
                </div>
            </div>
        </button>
    </nav>

    <!-- --- PROFILE SIDEBAR (Bootstrap Offcanvas) --- -->
    <button class="dashboard-profile-absolute mt-3" type="button" data-bs-toggle="offcanvas" data-bs-target="#rightSidebar" aria-controls="rightSidebar">
        <svg width="32" height="32" fill="none" viewBox="0 0 24 24">
            <circle cx="12" cy="8" r="4" stroke="#222" stroke-width="2"/>
            <circle cx="12" cy="12" r="11" stroke="#222" stroke-width="2"/>
            <path d="M4 20c1.5-3 5.5-5 8-5s6.5 2 8 5" stroke="#222" stroke-width="2"/>
        </svg>
    </button>

<!-- Profile Sidebar Content -->
<div class="offcanvas offcanvas-end" tabindex="-1" id="rightSidebar" aria-labelledby="rightSidebarLabel" data-bs-backdrop="false">
  <div class="offcanvas-header">
    <h5 class="offcanvas-title" id="rightSidebarLabel">Profile</h5>
    <button type="button" class="btn-close" data-bs-dismiss="offcanvas" aria-label="Close"></button>
  </div>

  <div class="offcanvas-body">
    <!-- Sidebar Profile Section -->
    <div class="sidebar-profile">
        <svg width="32" height="32" fill="none" viewBox="0 0 24 24">
            <circle cx="12" cy="8" r="4" stroke="#222" stroke-width="2"/>
            <circle cx="12" cy="12" r="11" stroke="#222" stroke-width="2"/>
            <path d="M4 20c1.5-3 5.5-5 8-5s6.5 2 8 5" stroke="#222" stroke-width="2"/>
        </svg>
        <div class="sidebar-profile-name">@((studentFirstName ?? "Student") + (string.IsNullOrWhiteSpace(studentLastName) ? "" : $" {studentLastName}"))</div>
        <div class="sidebar-profile-role">Student</div>
        <button class="sidebar-profile-btn" @onclick="NavigateToStudentProfile" data-bs-dismiss="offcanvas">Profile</button>
    </div>

    <!-- Sidebar Calendar -->
    <div class="sidebar-calendar">
        <div class="rounded-lg border p-3 bg-white shadow-sm">
            <DashboardCalendar CurrentMonth="@currentMonth" CurrentMonthChanged="@(m => currentMonth = m)" />
        </div>
    </div>

    <!-- Sidebar Notifications -->
    <div class="sidebar-notifications">
        <div class="sidebar-notifications-header">
            Notifications <span style="float:right;cursor:pointer;">Clear</span>
        </div>
        <div class="sidebar-notification-list">
            @for (int i = 0; i < 3; i++)
            {
                <div class="sidebar-notification">
                    <div class="sidebar-notification-title">Notif Title</div>
                    <div class="sidebar-notification-desc">Short Description Short Description Short Description</div>
                </div>
            }
        </div>
    </div>
  </div>
</div>

    <!-- --- MAIN CONTENT AREA --- -->
    <main class="main-content" style="flex:1; min-width:0; background: #f5f6fa;">
        @Body

    </main>



    @if (ShowChatbot)
    {
        <ChatBot CloseChatbot="CloseChatbot" />
    }

</div>

<!-- JavaScript helper to close Bootstrap offcanvas programmatically -->
<script>
document.addEventListener('click', function(event) {
    const offcanvas = document.getElementById('rightSidebar');
    if (offcanvas && offcanvas.classList.contains('show')) {
        // Ignore clicks inside the offcanvas or on the toggle button
        if (!offcanvas.contains(event.target) && !event.target.matches('[data-bs-toggle="offcanvas"]')) {
            const bsOffcanvas = bootstrap.Offcanvas.getInstance(offcanvas);
            if (bsOffcanvas) {
                bsOffcanvas.hide();
            }
        }
    }
});
</script>