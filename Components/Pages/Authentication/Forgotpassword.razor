@page "/forgot-password"
@using System.ComponentModel.DataAnnotations

<PageTitle>Forgot Password</PageTitle>

<div class="forgot-container">
    <div class="card shadow forgot-card">
        <div class="card-body">
        <!-- Page Heading -->
            <h3 class="card-title text-center mb-3 text-primary">Forgot Password</h3>
            
            <!-- Instructional text -->
            <p class="text-center text-muted mb-4">
                Enter your email address and we'll send you a link to reset your password.
            </p>

            <!-- Form for email input -->
            <EditForm Model="@forgotModel" OnValidSubmit="HandleForgotPassword">
                <!-- Enables validation attributes -->
                <DataAnnotationsValidator />
                <!-- Displays all validation errors -->
                <ValidationSummary />

                <!-- Email input field -->
                <div class="mb-3">
                    <label for="email" class="form-label fw-semibold">Email address</label>
                    <InputText id="email" @bind-Value="forgotModel.Email" type="email" class="form-control" />
                </div>

                <!-- Submit button -->
                <button type="submit" class="btn btn-primary w-100">Send Reset Link</button>
            </EditForm>

            <!-- Success message shown after submission -->
            @if (!string.IsNullOrEmpty(successMessage))
            {
                <div class="alert alert-success mt-3 text-center" role="alert">
                    @successMessage
                </div>
            }
        </div>
    </div>
</div>

@code {
    // Form model bound to EditForm
    private ForgotModel forgotModel = new();
    
    // Message to display after submitting the for
    private string? successMessage;

   
    // Handle the "Forgot Password" form submission
    private void HandleForgotPassword()
    {
        // FUTURE IMPLEMENTATION:
        // 1. Check if the email exists in the database
        // 2. Generate a password reset token
        // 3. Build a reset link (e.g., /reset-password?token=XYZ)
        // 4. Send the link via email using an email service (e.g., SendGrid, SMTP)
        // 5. Log activity for security auditing

        // Temporary placeholder message
        // TODO: Implement actual password reset logic (send email, etc.)
        successMessage = "If an account with that email exists, a reset link has been sent.";
    }

    // Model used for validation
    public class ForgotModel
    {
        [Required(ErrorMessage = "Email is required.")]
        [EmailAddress(ErrorMessage = "Invalid email address.")]
        public string Email { get; set; } = null!;
    }
}

