@page "/dashboard/institution/scholarships-info/{ScholarshipId:int}"
@attribute [Authorize(Roles = "Institution")]
@layout Layout.InstitutionDashLayout

@using Microsoft.EntityFrameworkCore
@using c2_eskolar.Data
@using c2_eskolar.Models
@inject ApplicationDbContext DbContext

@code {
    [Parameter] public int ScholarshipId { get; set; }
    private Scholarship? scholarship;
    private List<StudentProfile> studentApplicants = new();

    protected override async Task OnInitializedAsync()
    {
        scholarship = await DbContext.Scholarships
            .Include(s => s.Institution)
            .Include(s => s.Benefactor)
            .Include(s => s.Applications)
                .ThenInclude(a => a.Student)
            .FirstOrDefaultAsync(s => s.ScholarshipId == ScholarshipId);

        if (scholarship != null)
        {
            studentApplicants = scholarship.Applications
                .Where(a => a.Student != null)
                .Select(a => a.Student!)
                .ToList();
        }
    }
}

@if (scholarship == null)
{
    <div class="text-center my-5">
        <div class="spinner-border text-primary" role="status"></div>
        <p>Loading scholarship details...</p>
    </div>
}
else
{
    <!-- ðŸ”· Banner -->
    <div class="scholarship-banner text-white mb-4 me-lg-5"
         style="background: linear-gradient(135deg, #004085, #007bff); padding: 40px; border-radius: 8px; display: flex; align-items: center; margin-right: 40px;">
        <img src="https://via.placeholder.com/80x80.png?text=ðŸŽ“" alt="Scholarship Logo"
             style="width: 80px; height: 80px; border-radius: 50%; background-color: white; padding: 10px; margin-right: 20px;" />
        <div>
            <h1 class="mb-1" style="font-size: 2rem;">@scholarship.Title</h1>
            <p class="mb-0" style="opacity: 0.9;">
                @(!string.IsNullOrEmpty(scholarship.Institution?.InstitutionName)
                    ? scholarship.Institution.InstitutionName
                    : scholarship.Benefactor?.OrganizationName ?? "Unknown Provider")
            </p>
        </div>
    </div>

    <!-- ðŸ”„ Main content with 2-column layout -->
    <div class="container-fluid px-4">
        <div class="row">
            <!-- ðŸ“„ Scholarship Info (Left Column) -->
            <div class="col-lg-8 mb-5">
                <h2 class="fw-bold mb-4">@scholarship.Title</h2>

                <div class="mb-3"><strong>Provider:</strong>
                    @(!string.IsNullOrEmpty(scholarship.Institution?.InstitutionName)
                        ? scholarship.Institution.InstitutionName
                        : scholarship.Benefactor?.OrganizationName ?? "Unknown")
                </div>

                @if (!string.IsNullOrWhiteSpace(scholarship.Description))
                {
                    <div class="mb-3"><strong>Description:</strong><p>@scholarship.Description</p></div>
                }

                <div class="mb-3"><strong>Benefits:</strong> <p>@scholarship.Benefits</p></div>
                <div class="mb-3"><strong>Requirements:</strong> <p>@scholarship.Requirements</p></div>
                <div class="mb-3"><strong>Application Deadline:</strong> @scholarship.ApplicationDeadline.ToString("MMMM dd, yyyy")</div>
                <div class="mb-3"><strong>Slots Available:</strong> @scholarship.SlotsAvailable</div>
                <div class="mb-3"><strong>Minimum GPA:</strong> @scholarship.MinimumGPA</div>
                <div class="mb-3"><strong>Required Course:</strong> @scholarship.RequiredCourse</div>
                <div class="mb-3"><strong>Required Year Level:</strong> @scholarship.RequiredYearLevel</div>
                <div class="mb-3"><strong>Required University:</strong> @scholarship.RequiredUniversity</div>

                @if (!string.IsNullOrWhiteSpace(scholarship.ExternalApplicationUrl))
                {
                    <div class="mb-3">
                        <strong>Apply Externally:</strong>
                        <a href="@scholarship.ExternalApplicationUrl" target="_blank">@scholarship.ExternalApplicationUrl</a>
                    </div>
                }

                <div class="mb-4"><strong>Status:</strong> @(scholarship.IsActive ? "ðŸŸ¢ Active" : "ðŸ”´ Inactive")</div>
                
                <a class="btn btn-secondary" href="/dashboard/institution/scholarships">â¬… Back to List</a>
            </div>

            <!-- ðŸ‘¥ Student Applicants (Right Column) -->
            <div class="col-lg-4 mb-5">
                <div class="card shadow-sm">
                    <div class="card-header bg-primary text-white">
                        <h5 class="mb-0">ðŸ“‹ Student Applicants</h5>
                    </div>
                    <div class="card-body" style="max-height: 500px; overflow-y: auto;">
                        @if (!studentApplicants.Any())
                        {
                            <p class="text-muted">No students have applied yet.</p>
                        }
                        else
                        {
                            <ul class="list-group list-group-flush">
                                @foreach (var student in studentApplicants)
                                {
                                    <li class="list-group-item d-flex justify-content-between align-items-center">
                                        <span>@student.FirstName @student.LastName</span>
                                        <a class="btn btn-sm btn-outline-primary" href="/dashboard/institution/applications/review/@student.StudentProfileId">View</a>
                                    </li>
                                }
                            </ul>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
}
