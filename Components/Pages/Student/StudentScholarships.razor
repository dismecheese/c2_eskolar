@page "/dashboard/student/scholarships"
@attribute [Authorize(Roles = "Student")]
@layout Layout.StudentDashLayout

@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.EntityFrameworkCore
@using c2_eskolar.Data
@using c2_eskolar.Models
@inject ApplicationDbContext DbContext
@inject NavigationManager Navigation
@inject AuthenticationStateProvider AuthenticationStateProvider

<PageTitle>Scholarships</PageTitle>

<!-- ðŸŸ¦ Banner -->
<div class="scholarship-banner text-white mb-5 me-lg-5"
     style="background: linear-gradient(135deg, #004085, #007bff); padding: 40px 30px; border-radius: 8px; display: flex; align-items: center; margin-right: 80px;">
    <img src="https://via.placeholder.com/60x60.png?text=ðŸŽ“" alt="Scholarship Icon"
         style="width: 60px; height: 60px; border-radius: 50%; background-color: white; padding: 8px; margin-right: 20px;" />
    <div>
        <h1 class="mb-1" style="font-size: 1.8rem;">Scholarships</h1>
        <p class="mb-0" style="opacity: 0.9;">Explore scholarship opportunities available for you</p>
    </div>
</div>

<!-- ðŸ“„ Content -->
<div class="container my-5" style="margin-right: 80px;">

    @if (!string.IsNullOrEmpty(errorMessage))
    {
        <div class="alert alert-danger text-center">@errorMessage</div>
    }
    else if (scholarships is null)
    {
        <div class="text-center">Loading...</div>
    }
    else if (!scholarships.Any())
    {
        <div class="alert alert-light text-center">
            No scholarships posted yet.
        </div>
    }
    else
    {
        <div class="row g-4">
            @foreach (var scholarship in scholarships)
            {
                <div class="col-md-6 col-lg-4">
                    <div class="card shadow-sm h-100 clickable-card"
                         @onclick="() => ViewScholarship(scholarship.ScholarshipId)"
                         style="cursor: pointer;">
                        <div class="card-body d-flex flex-column">
                            <h5 class="card-title">@scholarship.Title</h5>
                            <p class="card-text text-muted mb-0">
                                @(!string.IsNullOrEmpty(scholarship.Institution?.InstitutionName)
                                    ? scholarship.Institution.InstitutionName
                                    : scholarship.Benefactor?.OrganizationName ?? "Unknown Provider")
                            </p>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
</div>

@code {
    private List<Scholarship>? scholarships;
    private string? errorMessage;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
            var user = authState.User;

            scholarships = await DbContext.Scholarships
                .Include(s => s.Institution)
                .Include(s => s.Benefactor)
                .Where(s => s.IsActive)
                .OrderByDescending(s => s.CreatedAt)
                .ToListAsync();

            if (scholarships == null)
            {
                errorMessage = "Scholarships list is null after query.";
            }
            else if (!scholarships.Any())
            {
                // No scholarships, not an error
            }
        }
        catch (Exception ex)
        {
            errorMessage = $"Failed to load scholarships: {ex.Message}";
        }
    }

    private void ViewScholarship(int id)
    {
    Navigation.NavigateTo($"/dashboard/student/scholarships-info/{id}");
    }

}
