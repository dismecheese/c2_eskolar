@page "/dashboard/student/scholarships/"
@attribute [Authorize(Roles = "Student,SuperAdmin")]
@layout Layout.StudentDashLayout

@using Microsoft.EntityFrameworkCore
@using c2_eskolar.Data
@using c2_eskolar.Models
@inject ApplicationDbContext DbContext
@inject NavigationManager Navigation

<PageTitle>Scholarships</PageTitle>

<div style="background: #f8fafc; min-height: 100vh; margin-top: 40px;">
    <div class="container my-5 p-4 rounded-4 shadow-lg" style="background: #fff; min-height: 80vh; margin-right: 80px;">
        <div class="d-flex justify-content-between align-items-center mb-4">
            <div>
                <h2 class="fw-bold mb-0 text-primary">
                    <i class="bi bi-mortarboard-fill text-primary me-2"></i> Scholarships
                </h2>
                <p class="text-secondary mb-0">View and apply to available scholarships below.</p>
            </div>
            <button class="btn btn-outline-primary" style="min-width: 220px;" @onclick="ViewApplicationSummary">
                <i class="bi bi-list-ul me-1"></i> View Application Summary
            </button>
        </div>

        <ul class="nav nav-tabs mb-4">
            <li class="nav-item">
                <button class="nav-link @(selectedTab == 0 ? "active" : "")" @onclick="() => SelectTab(0)">Institutional</button>
            </li>
            <li class="nav-item">
                <button class="nav-link @(selectedTab == 1 ? "active" : "")" @onclick="() => SelectTab(1)">Open Scholarships</button>
            </li>
        </ul>

        @if (scholarships is null)
        {
            <div class="d-flex justify-content-center align-items-center" style="height: 200px;">
                <div class="spinner-border text-primary" role="status">
                    <span class="visually-hidden">Loading...</span>
                </div>
            </div>
        }
        else
        {
            var filteredScholarships = selectedTab == 0
                ? scholarships.Where(s => s.IsInternal).ToList()
                : scholarships.Where(s => !s.IsInternal).ToList();

            if (!filteredScholarships.Any())
            {
                <div class="alert alert-info text-center py-4">
                    <i class="bi bi-emoji-frown me-2"></i> No scholarships available yet.
                </div>
            }
            else
            {
                <div class="row g-4">
                    @foreach (var scholarship in filteredScholarships)
                    {
                        <div class="col-md-6 col-lg-4">
                            <div class="card shadow-lg h-100 clickable-card border-0"
                                 @onclick="() => ViewScholarship(scholarship.ScholarshipId)"
                                 style="cursor: pointer; background: #fff; border-radius: 1.5rem; transition: box-shadow 0.2s, transform 0.2s;"
                                 onmouseover="this.style.boxShadow='0 0 0 0.25rem #2563eb55'; this.style.transform='scale(1.03)';" onmouseout="this.style.boxShadow='none'; this.style.transform='scale(1)';">
                                <div class="card-body d-flex flex-column">
                                    <div class="d-flex align-items-center mb-2">
                                        <i class="bi bi-award me-2 fs-4" style="color: #2563eb;"></i>
                                        <h5 class="card-title mb-0 text-primary">@scholarship.Title</h5>
                                    </div>
                                    <p class="card-text mb-2">
                                        <span class="badge bg-primary text-white me-1">
                                            @(!string.IsNullOrEmpty(scholarship.Institution?.InstitutionName)
                                                ? scholarship.Institution.InstitutionName
                                                : scholarship.Benefactor?.OrganizationName ?? "Unknown Provider")
                                        </span>
                                    </p>
                                    <div class="mb-2">
                                        <span class="badge bg-info text-dark">@scholarship.CreatedAt.ToString("MMM dd, yyyy")</span>
                                        @if (scholarship.IsInternal)
                                        {
                                            <span class="badge bg-primary text-white ms-1">Internal</span>
                                        }
                                        else if (scholarship.BenefactorProfileId != null)
                                        {
                                            <span class="badge bg-info text-dark ms-1">Partnership</span>
                                        }
                                        else
                                        {
                                            <span class="badge bg-secondary text-white ms-1">External</span>
                                        }
                                    </div>
                                    @if (selectedTab == 1)
                                    {
                                        <div class="mb-2">
                                            <span class="fw-semibold text-secondary">
                                                @if (scholarship.BenefactorProfileId != null && scholarship.Institution != null)
                                                {
                                                    <span>Partnership with @scholarship.Institution.InstitutionName</span>
                                                }
                                                else
                                                {
                                                    <span>None</span>
                                                }
                                            </span>
                                        </div>
                                    }
                                    <div class="mt-auto d-flex justify-content-between align-items-center">
                                        <span class="badge @(scholarship.IsActive ? "bg-primary text-white" : "bg-secondary text-white")">
                                            @(scholarship.IsActive ? "Active" : "Inactive")
                                        </span>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            }
        }
    </div>
</div>

@code {
    private List<Scholarship>? scholarships;
    private int selectedTab = 0; // 0 = Institutional, 1 = Open Scholarships

    protected override async Task OnInitializedAsync()
    {
        scholarships = await DbContext.Scholarships
            .Include(s => s.Institution)
            .Include(s => s.Benefactor)
            .OrderByDescending(s => s.CreatedAt)
            .ToListAsync();
    }

    private void SelectTab(int tab)
    {
        selectedTab = tab;
    }

    private void ViewScholarship(int id)
    {
        Navigation.NavigateTo($"/dashboard/student/scholarships-info/{id}");
    }

    private void ViewApplicationSummary()
    {
        Navigation.NavigateTo("/dashboard/student/applications");
    }
}
