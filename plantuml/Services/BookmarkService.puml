@startuml
class BookmarkService {
    + BookmarkService(contextFactory:IDbContextFactory<ApplicationDbContext>, logger:ILogger<BookmarkService>)
    + <<async>> AddBookmarkAsync(userId:string, scholarshipId:int, reason:string, priority:int) : Task<BookmarkedScholarship?>
    + <<async>> RemoveBookmarkAsync(userId:string, scholarshipId:int) : Task<bool>
    + <<async>> RemoveBookmarkByIdAsync(userId:string, bookmarkId:int) : Task<bool>
    + <<async>> UpdateBookmarkStatusAsync(userId:string, scholarshipId:int, status:BookmarkStatus) : Task<bool>
    + <<async>> GetOrganizedBookmarksAsync(userId:string) : Task<BookmarkOrganization>
    + <<async>> GetBookmarkAnalyticsAsync(userId:string) : Task<BookmarkAnalytics>
    + <<async>> GetSmartRecommendationsAsync(userId:string) : Task<List<SmartBookmarkRecommendation>>
    + <<async>> AutoBookmarkHighMatchesAsync(userId:string, threshold:decimal) : Task
    + <<async>> AddAnnouncementBookmarkAsync(userId:string, announcementId:Guid) : Task<BookmarkedAnnouncement?>
    + <<async>> RemoveAnnouncementBookmarkAsync(userId:string, announcementId:Guid) : Task<bool>
    + <<async>> GetUserAnnouncementBookmarksAsync(userId:string) : Task<List<BookmarkedAnnouncement>>
    + <<async>> IsAnnouncementBookmarkedAsync(userId:string, announcementId:Guid) : Task<bool>
}
@enduml
